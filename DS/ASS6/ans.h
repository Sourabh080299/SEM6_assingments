/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _ANS_H_RPCGEN
#define _ANS_H_RPCGEN

#include <rpc/rpc.h>


#ifdef __cplusplus
extern "C" {
#endif


struct input {
	int size;
	char str[50];
};
typedef struct input input;

struct number {
	int a;
	int b;
};
typedef struct number number;

struct num_arr {
	int size;
	int arr[50];
};
typedef struct num_arr num_arr;

struct stat {
	int maximum;
	int minimum;
	double avg;
};
typedef struct stat stat;

struct two_str {
	struct input s1;
	struct input s2;
};
typedef struct two_str two_str;

#define SOL_PROG 0x123456
#define SOL_VERS 1

#if defined(__STDC__) || defined(__cplusplus)
#define polindrome 1
extern  int * polindrome_1(input *, CLIENT *);
extern  int * polindrome_1_svc(input *, struct svc_req *);
#define check_leap_year 2
extern  int * check_leap_year_1(int *, CLIENT *);
extern  int * check_leap_year_1_svc(int *, struct svc_req *);
#define gcd 3
extern  int * gcd_1(number *, CLIENT *);
extern  int * gcd_1_svc(number *, struct svc_req *);
#define sqr_root 4
extern  double * sqr_root_1(int *, CLIENT *);
extern  double * sqr_root_1_svc(int *, struct svc_req *);
#define swap 5
extern  number * swap_1(number *, CLIENT *);
extern  number * swap_1_svc(number *, struct svc_req *);
#define getstat 6
extern  stat * getstat_1(num_arr *, CLIENT *);
extern  stat * getstat_1_svc(num_arr *, struct svc_req *);
#define comp_str 7
extern  int * comp_str_1(two_str *, CLIENT *);
extern  int * comp_str_1_svc(two_str *, struct svc_req *);
#define chk_substr 8
extern  int * chk_substr_1(two_str *, CLIENT *);
extern  int * chk_substr_1_svc(two_str *, struct svc_req *);
#define concate 9
extern  input * concate_1(two_str *, CLIENT *);
extern  input * concate_1_svc(two_str *, struct svc_req *);
#define reverse 10
extern  num_arr * reverse_1(num_arr *, CLIENT *);
extern  num_arr * reverse_1_svc(num_arr *, struct svc_req *);
extern int sol_prog_1_freeresult (SVCXPRT *, xdrproc_t, caddr_t);

#else /* K&R C */
#define polindrome 1
extern  int * polindrome_1();
extern  int * polindrome_1_svc();
#define check_leap_year 2
extern  int * check_leap_year_1();
extern  int * check_leap_year_1_svc();
#define gcd 3
extern  int * gcd_1();
extern  int * gcd_1_svc();
#define sqr_root 4
extern  double * sqr_root_1();
extern  double * sqr_root_1_svc();
#define swap 5
extern  number * swap_1();
extern  number * swap_1_svc();
#define getstat 6
extern  stat * getstat_1();
extern  stat * getstat_1_svc();
#define comp_str 7
extern  int * comp_str_1();
extern  int * comp_str_1_svc();
#define chk_substr 8
extern  int * chk_substr_1();
extern  int * chk_substr_1_svc();
#define concate 9
extern  input * concate_1();
extern  input * concate_1_svc();
#define reverse 10
extern  num_arr * reverse_1();
extern  num_arr * reverse_1_svc();
extern int sol_prog_1_freeresult ();
#endif /* K&R C */

/* the xdr functions */

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t xdr_input (XDR *, input*);
extern  bool_t xdr_number (XDR *, number*);
extern  bool_t xdr_num_arr (XDR *, num_arr*);
extern  bool_t xdr_stat (XDR *, stat*);
extern  bool_t xdr_two_str (XDR *, two_str*);

#else /* K&R C */
extern bool_t xdr_input ();
extern bool_t xdr_number ();
extern bool_t xdr_num_arr ();
extern bool_t xdr_stat ();
extern bool_t xdr_two_str ();

#endif /* K&R C */

#ifdef __cplusplus
}
#endif

#endif /* !_ANS_H_RPCGEN */
